<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.app.dao.MemberDao">

	<resultMap id="joinedResult" type="com.example.app.domain.Member">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="furigana" column="furigana" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="status" column="status" />

		<association property="orders" column="orders_id"
			javaType="com.example.app.domain.Orders">
			<id property="id" column="orders_id" />
			<result property="name" column="orders_name" />
		</association>
	</resultMap>

	<select id="selectAll"	resultMap ="joinedResult">
		SELECT
		member.id,
		member.name,
		member.furigana,
		member.email,
		member.password,
		member.status,
		orders.id AS orders_id,
		orders.name AS orders_name
		FROM member
		LEFT OUTER JOIN orders ON member.orders_id = orders.id
		ORDER BY member.id ASC
	</select>

	<select id="selectById" parameterType="int"
		resultMap ="joinedResult">
		SELECT
		member.id,
		member.name,
		member.furigana,
		member.email,
		member.password,
		member.status,
		orders.id AS orders_id,
		orders.name AS orders_name
		FROM member
		LEFT OUTER JOIN orders ON member.orders_id = orders.id
		WHERE member.id= #{id}
	</select>

	<select id="selectByEmail"
		resultMap ="joinedResult">
		SELECT * FROM member WHERE email= #{email}
	</select>

	<insert id="insert"
		parameterType="com.example.app.domain.Member" useGeneratedKeys="true">
		INSERT
		INTO member (name,furigana,email,password)
		VALUES (#{name},#{furigana},#{email},#{password})
	</insert>

	<update id="update"
		parameterType="com.example.app.domain.Member">
		UPDATE member
		SET name = #{name}, furigana= #{furigana}, email= #{email},
		password= #{password}
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM member WHERE id =
		#{id}
	</delete>

	<update id="link" parameterType="com.example.app.domain.Member">
		UPDATE member
		SET status = 'staff' ,orders_id=#{orders.id}
		WHERE id = #{id}
	</update>

	<update id="reset" parameterType="com.example.app.domain.Member">
		UPDATE member
		SET status =  NULL ,orders_id= NULL
		WHERE id = #{id}
	</update>

	<select id="count" resultType="long">
		SELECT COUNT(*) FROM member
	</select>

	<select id="selectLimited" resultMap ="joinedResult">
		SELECT
		member.id,
		member.name,
		member.furigana,
		member.email,
		member.password,
		member.status,
		orders.id AS orders_id,
		orders.name AS orders_name
		FROM member
		LEFT OUTER JOIN orders ON member.orders_id = orders.id
		ORDER BY member.id ASC
		LIMIT #{offset}, #{numPerPage}
	</select>
</mapper>